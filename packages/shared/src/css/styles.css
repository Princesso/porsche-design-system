:root {
  --p-transition-duration: 0s;
  --p-animation-duration: 0s;
  --p-temporary-spinner-stroke-dasharray: 40;
  --p-temporary-toast-skip-timeout: true;
}

html,
body {
  margin: 0;
  padding: 0;
  font: revert;
  line-height: revert;
  text-size-adjust: revert;
  -webkit-text-size-adjust: revert;
}

body {
  color: deeppink;
  font-family: serif;
  font-style: italic;
  font-weight: bold;
  font-size: small;
  line-height: normal;
  font-variant: small-caps;
}

body > div,
body > app-root {
  font: revert;
  line-height: revert;
  text-size-adjust: revert;
  -webkit-text-size-adjust: revert;
}

select:focus,
select {
  position: relative;
  z-index: 999999;
  font: revert;
  outline: none;
  outline-offset: 0;
}

.playground {
  padding: 1rem;
}

.playground.light {
  background: #fff;
}

.playground.light.surface {
  background: #eeeff2;
}

.playground.dark {
  background: #0e0e12;
}

.playground.dark.surface {
  background: #212225;
}

.playground.hover::before,
.playground.focus::before,
.playground.focus-hover::before {
  display: block;
  background: deeppink;
  font-size: 16px;
  line-height: normal;
  color: white;
  font-weight: bold;
  padding: 0.5rem;
  margin-bottom: 0.5rem;
}

/*light*/
.playground.light.hover::before {
  content: ':hover (theme=light)';
}

.playground.light.focus::before {
  content: ':focus-visible (theme=light)';
}

.playground.light.focus-hover::before {
  content: ':focus-visible:hover (theme=light)';
}

/*dark*/
.playground.dark.hover::before {
  content: ':hover (theme=dark)';
}

.playground.dark.focus::before {
  content: ':focus-visible (theme=dark)';
}

.playground.dark.focus-hover::before {
  content: ':focus-visible:hover (theme=dark)';
}

/* Visualize Grid */
.visualize-grid {
  position: fixed;
  inset: 0;
  pointer-events: none;
  /* TODO: we should generate visualize grid with scss or js styles package */
  margin: 0;
  display: grid;
  padding: 0 calc(50% - 2560px / 2);
  grid-gap: clamp(16px, 1.25vw + 12px, 36px);
  max-width: 2560px;
  min-width: 320px;
  box-sizing: content-box;
  grid-template-columns:
    [full-start] minmax(0, calc(var(--pds-internal-grid-safe-zone) - clamp(16px, 1.25vw + 12px, 36px)))
    [extended-start basic-start narrow-start] repeat(6, minmax(0, 1fr)) [narrow-end basic-end extended-end] minmax(
      0,
      calc(var(--pds-internal-grid-safe-zone) - clamp(16px, 1.25vw + 12px, 36px))
    )
    [full-end];
  --pds-internal-grid-safe-zone: clamp(22px, 10.625vw - 12px, 192px);
  --pds-grid-basic-span-one-half: span 3;
  --pds-grid-basic-span-one-third: span 2;
  --pds-grid-narrow-span-one-half: span 3;
  --pds-grid-basic-span-two-thirds: span 4;
  --pds-grid-extended-span-one-half: span 3;
}
@media (min-width: 760px) {
  .visualize-grid {
    grid-template-columns:
      [full-start] minmax(0, calc(var(--pds-internal-grid-safe-zone) - clamp(16px, 1.25vw + 12px, 36px)))
      [extended-start] minmax(0, 1fr) [basic-start] repeat(2, minmax(0, 1fr)) [narrow-start] repeat(8, minmax(0, 1fr))
      [narrow-end] repeat(2, minmax(0, 1fr)) [basic-end] minmax(0, 1fr) [extended-end] minmax(
        0,
        calc(var(--pds-internal-grid-safe-zone) - clamp(16px, 1.25vw + 12px, 36px))
      )
      [full-end];
    --pds-grid-basic-span-one-half: span 6;
    --pds-grid-basic-span-one-third: span 4;
    --pds-grid-narrow-span-one-half: span 4;
    --pds-grid-basic-span-two-thirds: span 8;
    --pds-grid-extended-span-one-half: span 7;
  }
}

@media (min-width: 1920px) {
  .visualize-grid {
    --pds-internal-grid-safe-zone: clamp(192px, 50vw - 768px, 512px);
  }
}

.visualize-grid > span {
  background: rgba(0, 0, 255, 0.1);
}

@media (max-width: 759px) {
  .visualize-grid > span:nth-child(n + 9) {
    display: none;
  }
}
