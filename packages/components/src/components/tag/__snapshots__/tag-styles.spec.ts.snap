// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`getColors() should return correct css for theme: dark and hasInvertedTheme: false 1`] = `
{
  "backgroundColor": "#212225",
  "backgroundHoverColor": "#3e4045",
  "focusColor": "#0A0AFF",
  "primaryColor": "#FBFCFF",
}
`;

exports[`getColors() should return correct css for theme: dark and hasInvertedTheme: true 1`] = `
{
  "backgroundColor": "#212225",
  "backgroundHoverColor": "#3e4045",
  "focusColor": "#0A0AFF",
  "primaryColor": "#010205",
}
`;

exports[`getColors() should return correct css for theme: light and hasInvertedTheme: false 1`] = `
{
  "backgroundColor": "#EEEFF2",
  "backgroundHoverColor": "#cbced7",
  "focusColor": "#0A0AFF",
  "primaryColor": "#010205",
}
`;

exports[`getColors() should return correct css for theme: light and hasInvertedTheme: true 1`] = `
{
  "backgroundColor": "#EEEFF2",
  "backgroundHoverColor": "#cbced7",
  "focusColor": "#0A0AFF",
  "primaryColor": "#FBFCFF",
}
`;

exports[`getComponentCss() should return correct css for color: background-default, isFocusable: false and theme: dark 1`] = `
":host {
  display: inline-flex;
  vertical-align: top;
}
span {
  display: flex;
  align-items: center;
  position: relative;
  padding: 5px 9px;
  border-radius: 4px;
  background: #0E0E12;
  color: #FBFCFF;
  font: normal normal 400 .875rem/calc(6px + 2.125ex) 'Porsche Next','Arial Narrow',Arial,'Heiti SC',SimHei,sans-serif;
  overflow-wrap: break-word;
  hyphens: auto;
  white-space: nowrap;
  transition: background-color var(--p-transition-duration, .24s) ease;
}
::slotted(a), ::slotted(button) {
  display: inline !important;
  position: static !important;
  text-decoration: underline !important;
  cursor: pointer !important;
  font: inherit !important;
  outline: 0 !important;
  color: inherit !important;
}
::slotted(a)::before, ::slotted(button)::before {
  content: "" !important;
  position: absolute !important;
  top: -4px !important;
  left: -4px !important;
  right: -4px !important;
  bottom: -4px !important;
  border: 2px solid transparent !important;
  border-radius: 8px !important;
}
::slotted(a:focus)::before, ::slotted(button:focus)::before {
  border-color: #0A0AFF !important;
}
::slotted(a:focus:not(:focus-visible))::before, ::slotted(button:focus:not(:focus-visible))::before {
  border-color: transparent !important;
}
::slotted(button) {
  margin: 0 !important;
  padding: 0 !important;
  background: 0 !important;
  border: 0 !important;
  text-align: left !important;
}
::slotted(br) {
  display: none !important;
}
::slotted(strong), ::slotted(b) {
  font-weight: 700 !important;
}
::slotted(em), ::slotted(i) {
  font-style: [object Object];
}
.icon {
  margin: 0 0.125rem 0 -0.125rem;
}"
`;

exports[`getComponentCss() should return correct css for color: background-default, isFocusable: false and theme: light 1`] = `
":host {
  display: inline-flex;
  vertical-align: top;
}
span {
  display: flex;
  align-items: center;
  position: relative;
  padding: 5px 9px;
  border-radius: 4px;
  background: #FFF;
  color: #010205;
  font: normal normal 400 .875rem/calc(6px + 2.125ex) 'Porsche Next','Arial Narrow',Arial,'Heiti SC',SimHei,sans-serif;
  overflow-wrap: break-word;
  hyphens: auto;
  white-space: nowrap;
  transition: background-color var(--p-transition-duration, .24s) ease;
}
::slotted(a), ::slotted(button) {
  display: inline !important;
  position: static !important;
  text-decoration: underline !important;
  cursor: pointer !important;
  font: inherit !important;
  outline: 0 !important;
  color: inherit !important;
}
::slotted(a)::before, ::slotted(button)::before {
  content: "" !important;
  position: absolute !important;
  top: -4px !important;
  left: -4px !important;
  right: -4px !important;
  bottom: -4px !important;
  border: 2px solid transparent !important;
  border-radius: 8px !important;
}
::slotted(a:focus)::before, ::slotted(button:focus)::before {
  border-color: #0A0AFF !important;
}
::slotted(a:focus:not(:focus-visible))::before, ::slotted(button:focus:not(:focus-visible))::before {
  border-color: transparent !important;
}
::slotted(button) {
  margin: 0 !important;
  padding: 0 !important;
  background: 0 !important;
  border: 0 !important;
  text-align: left !important;
}
::slotted(br) {
  display: none !important;
}
::slotted(strong), ::slotted(b) {
  font-weight: 700 !important;
}
::slotted(em), ::slotted(i) {
  font-style: [object Object];
}
.icon {
  margin: 0 0.125rem 0 -0.125rem;
}"
`;

exports[`getComponentCss() should return correct css for color: background-default, isFocusable: true and theme: dark 1`] = `
":host {
  display: inline-flex;
  vertical-align: top;
}
span {
  display: flex;
  align-items: center;
  position: relative;
  padding: 5px 9px;
  border-radius: 4px;
  background: #0E0E12;
  color: #FBFCFF;
  font: normal normal 400 .875rem/calc(6px + 2.125ex) 'Porsche Next','Arial Narrow',Arial,'Heiti SC',SimHei,sans-serif;
  overflow-wrap: break-word;
  hyphens: auto;
  white-space: nowrap;
  transition: background-color var(--p-transition-duration, .24s) ease;
}
::slotted(a), ::slotted(button) {
  display: inline !important;
  position: static !important;
  text-decoration: underline !important;
  cursor: pointer !important;
  font: inherit !important;
  outline: 0 !important;
  color: inherit !important;
}
::slotted(a)::before, ::slotted(button)::before {
  content: "" !important;
  position: absolute !important;
  top: -4px !important;
  left: -4px !important;
  right: -4px !important;
  bottom: -4px !important;
  border: 2px solid transparent !important;
  border-radius: 8px !important;
}
::slotted(a:focus)::before, ::slotted(button:focus)::before {
  border-color: #0A0AFF !important;
}
::slotted(a:focus:not(:focus-visible))::before, ::slotted(button:focus:not(:focus-visible))::before {
  border-color: transparent !important;
}
::slotted(button) {
  margin: 0 !important;
  padding: 0 !important;
  background: 0 !important;
  border: 0 !important;
  text-align: left !important;
}
::slotted(br) {
  display: none !important;
}
::slotted(strong), ::slotted(b) {
  font-weight: 700 !important;
}
::slotted(em), ::slotted(i) {
  font-style: [object Object];
}
@media(hover:hover) {
  span:hover {
    cursor: pointer;
    background: #292934;
  }
}

.icon {
  margin: 0 0.125rem 0 -0.125rem;
}"
`;

exports[`getComponentCss() should return correct css for color: background-default, isFocusable: true and theme: light 1`] = `
":host {
  display: inline-flex;
  vertical-align: top;
}
span {
  display: flex;
  align-items: center;
  position: relative;
  padding: 5px 9px;
  border-radius: 4px;
  background: #FFF;
  color: #010205;
  font: normal normal 400 .875rem/calc(6px + 2.125ex) 'Porsche Next','Arial Narrow',Arial,'Heiti SC',SimHei,sans-serif;
  overflow-wrap: break-word;
  hyphens: auto;
  white-space: nowrap;
  transition: background-color var(--p-transition-duration, .24s) ease;
}
::slotted(a), ::slotted(button) {
  display: inline !important;
  position: static !important;
  text-decoration: underline !important;
  cursor: pointer !important;
  font: inherit !important;
  outline: 0 !important;
  color: inherit !important;
}
::slotted(a)::before, ::slotted(button)::before {
  content: "" !important;
  position: absolute !important;
  top: -4px !important;
  left: -4px !important;
  right: -4px !important;
  bottom: -4px !important;
  border: 2px solid transparent !important;
  border-radius: 8px !important;
}
::slotted(a:focus)::before, ::slotted(button:focus)::before {
  border-color: #0A0AFF !important;
}
::slotted(a:focus:not(:focus-visible))::before, ::slotted(button:focus:not(:focus-visible))::before {
  border-color: transparent !important;
}
::slotted(button) {
  margin: 0 !important;
  padding: 0 !important;
  background: 0 !important;
  border: 0 !important;
  text-align: left !important;
}
::slotted(br) {
  display: none !important;
}
::slotted(strong), ::slotted(b) {
  font-weight: 700 !important;
}
::slotted(em), ::slotted(i) {
  font-style: [object Object];
}
@media(hover:hover) {
  span:hover {
    cursor: pointer;
    background: #e0e0e0;
  }
}

.icon {
  margin: 0 0.125rem 0 -0.125rem;
}"
`;

exports[`getComponentCss() should return correct css for color: background-surface, isFocusable: true and theme: dark 1`] = `
":host {
  display: inline-flex;
  vertical-align: top;
}
span {
  display: flex;
  align-items: center;
  position: relative;
  padding: 5px 9px;
  border-radius: 4px;
  background: #212225;
  color: #FBFCFF;
  font: normal normal 400 .875rem/calc(6px + 2.125ex) 'Porsche Next','Arial Narrow',Arial,'Heiti SC',SimHei,sans-serif;
  overflow-wrap: break-word;
  hyphens: auto;
  white-space: nowrap;
  transition: background-color var(--p-transition-duration, .24s) ease;
}
::slotted(a), ::slotted(button) {
  display: inline !important;
  position: static !important;
  text-decoration: underline !important;
  cursor: pointer !important;
  font: inherit !important;
  outline: 0 !important;
  color: inherit !important;
}
::slotted(a)::before, ::slotted(button)::before {
  content: "" !important;
  position: absolute !important;
  top: -4px !important;
  left: -4px !important;
  right: -4px !important;
  bottom: -4px !important;
  border: 2px solid transparent !important;
  border-radius: 8px !important;
}
::slotted(a:focus)::before, ::slotted(button:focus)::before {
  border-color: #0A0AFF !important;
}
::slotted(a:focus:not(:focus-visible))::before, ::slotted(button:focus:not(:focus-visible))::before {
  border-color: transparent !important;
}
::slotted(button) {
  margin: 0 !important;
  padding: 0 !important;
  background: 0 !important;
  border: 0 !important;
  text-align: left !important;
}
::slotted(br) {
  display: none !important;
}
::slotted(strong), ::slotted(b) {
  font-weight: 700 !important;
}
::slotted(em), ::slotted(i) {
  font-style: [object Object];
}
@media(hover:hover) {
  span:hover {
    cursor: pointer;
    background: #3e4045;
  }
}

.icon {
  margin: 0 0.125rem 0 -0.125rem;
}"
`;

exports[`getComponentCss() should return correct css for color: background-surface, isFocusable: true and theme: light 1`] = `
":host {
  display: inline-flex;
  vertical-align: top;
}
span {
  display: flex;
  align-items: center;
  position: relative;
  padding: 5px 9px;
  border-radius: 4px;
  background: #EEEFF2;
  color: #010205;
  font: normal normal 400 .875rem/calc(6px + 2.125ex) 'Porsche Next','Arial Narrow',Arial,'Heiti SC',SimHei,sans-serif;
  overflow-wrap: break-word;
  hyphens: auto;
  white-space: nowrap;
  transition: background-color var(--p-transition-duration, .24s) ease;
}
::slotted(a), ::slotted(button) {
  display: inline !important;
  position: static !important;
  text-decoration: underline !important;
  cursor: pointer !important;
  font: inherit !important;
  outline: 0 !important;
  color: inherit !important;
}
::slotted(a)::before, ::slotted(button)::before {
  content: "" !important;
  position: absolute !important;
  top: -4px !important;
  left: -4px !important;
  right: -4px !important;
  bottom: -4px !important;
  border: 2px solid transparent !important;
  border-radius: 8px !important;
}
::slotted(a:focus)::before, ::slotted(button:focus)::before {
  border-color: #0A0AFF !important;
}
::slotted(a:focus:not(:focus-visible))::before, ::slotted(button:focus:not(:focus-visible))::before {
  border-color: transparent !important;
}
::slotted(button) {
  margin: 0 !important;
  padding: 0 !important;
  background: 0 !important;
  border: 0 !important;
  text-align: left !important;
}
::slotted(br) {
  display: none !important;
}
::slotted(strong), ::slotted(b) {
  font-weight: 700 !important;
}
::slotted(em), ::slotted(i) {
  font-style: [object Object];
}
@media(hover:hover) {
  span:hover {
    cursor: pointer;
    background: #cbced7;
  }
}

.icon {
  margin: 0 0.125rem 0 -0.125rem;
}"
`;

exports[`getComponentCss() should return correct css for color: neutral-contrast-high, isFocusable: true and theme: dark 1`] = `
":host {
  display: inline-flex;
  vertical-align: top;
}
span {
  display: flex;
  align-items: center;
  position: relative;
  padding: 5px 9px;
  border-radius: 4px;
  background: #FBFCFF;
  color: #010205;
  font: normal normal 400 .875rem/calc(6px + 2.125ex) 'Porsche Next','Arial Narrow',Arial,'Heiti SC',SimHei,sans-serif;
  overflow-wrap: break-word;
  hyphens: auto;
  white-space: nowrap;
  transition: background-color var(--p-transition-duration, .24s) ease;
}
::slotted(a), ::slotted(button) {
  display: inline !important;
  position: static !important;
  text-decoration: underline !important;
  cursor: pointer !important;
  font: inherit !important;
  outline: 0 !important;
  color: inherit !important;
}
::slotted(a)::before, ::slotted(button)::before {
  content: "" !important;
  position: absolute !important;
  top: -4px !important;
  left: -4px !important;
  right: -4px !important;
  bottom: -4px !important;
  border: 2px solid transparent !important;
  border-radius: 8px !important;
}
::slotted(a:focus)::before, ::slotted(button:focus)::before {
  border-color: #0A0AFF !important;
}
::slotted(a:focus:not(:focus-visible))::before, ::slotted(button:focus:not(:focus-visible))::before {
  border-color: transparent !important;
}
::slotted(button) {
  margin: 0 !important;
  padding: 0 !important;
  background: 0 !important;
  border: 0 !important;
  text-align: left !important;
}
::slotted(br) {
  display: none !important;
}
::slotted(strong), ::slotted(b) {
  font-weight: 700 !important;
}
::slotted(em), ::slotted(i) {
  font-style: [object Object];
}
@media(hover:hover) {
  span:hover {
    cursor: pointer;
    background: #cecfd1;
  }
}

.icon {
  margin: 0 0.125rem 0 -0.125rem;
}"
`;

exports[`getComponentCss() should return correct css for color: neutral-contrast-high, isFocusable: true and theme: light 1`] = `
":host {
  display: inline-flex;
  vertical-align: top;
}
span {
  display: flex;
  align-items: center;
  position: relative;
  padding: 5px 9px;
  border-radius: 4px;
  background: #010205;
  color: #FBFCFF;
  font: normal normal 400 .875rem/calc(6px + 2.125ex) 'Porsche Next','Arial Narrow',Arial,'Heiti SC',SimHei,sans-serif;
  overflow-wrap: break-word;
  hyphens: auto;
  white-space: nowrap;
  transition: background-color var(--p-transition-duration, .24s) ease;
}
::slotted(a), ::slotted(button) {
  display: inline !important;
  position: static !important;
  text-decoration: underline !important;
  cursor: pointer !important;
  font: inherit !important;
  outline: 0 !important;
  color: inherit !important;
}
::slotted(a)::before, ::slotted(button)::before {
  content: "" !important;
  position: absolute !important;
  top: -4px !important;
  left: -4px !important;
  right: -4px !important;
  bottom: -4px !important;
  border: 2px solid transparent !important;
  border-radius: 8px !important;
}
::slotted(a:focus)::before, ::slotted(button:focus)::before {
  border-color: #0A0AFF !important;
}
::slotted(a:focus:not(:focus-visible))::before, ::slotted(button:focus:not(:focus-visible))::before {
  border-color: transparent !important;
}
::slotted(button) {
  margin: 0 !important;
  padding: 0 !important;
  background: 0 !important;
  border: 0 !important;
  text-align: left !important;
}
::slotted(br) {
  display: none !important;
}
::slotted(strong), ::slotted(b) {
  font-weight: 700 !important;
}
::slotted(em), ::slotted(i) {
  font-style: [object Object];
}
@media(hover:hover) {
  span:hover {
    cursor: pointer;
    background: #535457;
  }
}

.icon {
  margin: 0 0.125rem 0 -0.125rem;
}"
`;

exports[`getComponentCss() should return correct css for color: notification-error, isFocusable: true and theme: dark 1`] = `
":host {
  display: inline-flex;
  vertical-align: top;
}
span {
  display: flex;
  align-items: center;
  position: relative;
  padding: 5px 9px;
  border-radius: 4px;
  background: #290A0A;
  color: #FBFCFF;
  font: normal normal 400 .875rem/calc(6px + 2.125ex) 'Porsche Next','Arial Narrow',Arial,'Heiti SC',SimHei,sans-serif;
  overflow-wrap: break-word;
  hyphens: auto;
  white-space: nowrap;
  transition: background-color var(--p-transition-duration, .24s) ease;
}
::slotted(a), ::slotted(button) {
  display: inline !important;
  position: static !important;
  text-decoration: underline !important;
  cursor: pointer !important;
  font: inherit !important;
  outline: 0 !important;
  color: inherit !important;
}
::slotted(a)::before, ::slotted(button)::before {
  content: "" !important;
  position: absolute !important;
  top: -4px !important;
  left: -4px !important;
  right: -4px !important;
  bottom: -4px !important;
  border: 2px solid transparent !important;
  border-radius: 8px !important;
}
::slotted(a:focus)::before, ::slotted(button:focus)::before {
  border-color: #0A0AFF !important;
}
::slotted(a:focus:not(:focus-visible))::before, ::slotted(button:focus:not(:focus-visible))::before {
  border-color: transparent !important;
}
::slotted(button) {
  margin: 0 !important;
  padding: 0 !important;
  background: 0 !important;
  border: 0 !important;
  text-align: left !important;
}
::slotted(br) {
  display: none !important;
}
::slotted(strong), ::slotted(b) {
  font-weight: 700 !important;
}
::slotted(em), ::slotted(i) {
  font-style: [object Object];
}
@media(hover:hover) {
  span:hover {
    cursor: pointer;
    background: #331f1f;
  }
}

.icon {
  margin: 0 0.125rem 0 -0.125rem;
}"
`;

exports[`getComponentCss() should return correct css for color: notification-error, isFocusable: true and theme: light 1`] = `
":host {
  display: inline-flex;
  vertical-align: top;
}
span {
  display: flex;
  align-items: center;
  position: relative;
  padding: 5px 9px;
  border-radius: 4px;
  background: #FCE8E9;
  color: #010205;
  font: normal normal 400 .875rem/calc(6px + 2.125ex) 'Porsche Next','Arial Narrow',Arial,'Heiti SC',SimHei,sans-serif;
  overflow-wrap: break-word;
  hyphens: auto;
  white-space: nowrap;
  transition: background-color var(--p-transition-duration, .24s) ease;
}
::slotted(a), ::slotted(button) {
  display: inline !important;
  position: static !important;
  text-decoration: underline !important;
  cursor: pointer !important;
  font: inherit !important;
  outline: 0 !important;
  color: inherit !important;
}
::slotted(a)::before, ::slotted(button)::before {
  content: "" !important;
  position: absolute !important;
  top: -4px !important;
  left: -4px !important;
  right: -4px !important;
  bottom: -4px !important;
  border: 2px solid transparent !important;
  border-radius: 8px !important;
}
::slotted(a:focus)::before, ::slotted(button:focus)::before {
  border-color: #0A0AFF !important;
}
::slotted(a:focus:not(:focus-visible))::before, ::slotted(button:focus:not(:focus-visible))::before {
  border-color: transparent !important;
}
::slotted(button) {
  margin: 0 !important;
  padding: 0 !important;
  background: 0 !important;
  border: 0 !important;
  text-align: left !important;
}
::slotted(br) {
  display: none !important;
}
::slotted(strong), ::slotted(b) {
  font-weight: 700 !important;
}
::slotted(em), ::slotted(i) {
  font-style: [object Object];
}
@media(hover:hover) {
  span:hover {
    cursor: pointer;
    background: #eed7d9;
  }
}

.icon {
  margin: 0 0.125rem 0 -0.125rem;
}"
`;

exports[`getComponentCss() should return correct css for color: notification-information, isFocusable: true and theme: dark 1`] = `
":host {
  display: inline-flex;
  vertical-align: top;
}
span {
  display: flex;
  align-items: center;
  position: relative;
  padding: 5px 9px;
  border-radius: 4px;
  background: #001A33;
  color: #FBFCFF;
  font: normal normal 400 .875rem/calc(6px + 2.125ex) 'Porsche Next','Arial Narrow',Arial,'Heiti SC',SimHei,sans-serif;
  overflow-wrap: break-word;
  hyphens: auto;
  white-space: nowrap;
  transition: background-color var(--p-transition-duration, .24s) ease;
}
::slotted(a), ::slotted(button) {
  display: inline !important;
  position: static !important;
  text-decoration: underline !important;
  cursor: pointer !important;
  font: inherit !important;
  outline: 0 !important;
  color: inherit !important;
}
::slotted(a)::before, ::slotted(button)::before {
  content: "" !important;
  position: absolute !important;
  top: -4px !important;
  left: -4px !important;
  right: -4px !important;
  bottom: -4px !important;
  border: 2px solid transparent !important;
  border-radius: 8px !important;
}
::slotted(a:focus)::before, ::slotted(button:focus)::before {
  border-color: #0A0AFF !important;
}
::slotted(a:focus:not(:focus-visible))::before, ::slotted(button:focus:not(:focus-visible))::before {
  border-color: transparent !important;
}
::slotted(button) {
  margin: 0 !important;
  padding: 0 !important;
  background: 0 !important;
  border: 0 !important;
  text-align: left !important;
}
::slotted(br) {
  display: none !important;
}
::slotted(strong), ::slotted(b) {
  font-weight: 700 !important;
}
::slotted(em), ::slotted(i) {
  font-style: [object Object];
}
@media(hover:hover) {
  span:hover {
    cursor: pointer;
    background: #0f2943;
  }
}

.icon {
  margin: 0 0.125rem 0 -0.125rem;
}"
`;

exports[`getComponentCss() should return correct css for color: notification-information, isFocusable: true and theme: light 1`] = `
":host {
  display: inline-flex;
  vertical-align: top;
}
span {
  display: flex;
  align-items: center;
  position: relative;
  padding: 5px 9px;
  border-radius: 4px;
  background: #E8EEFD;
  color: #010205;
  font: normal normal 400 .875rem/calc(6px + 2.125ex) 'Porsche Next','Arial Narrow',Arial,'Heiti SC',SimHei,sans-serif;
  overflow-wrap: break-word;
  hyphens: auto;
  white-space: nowrap;
  transition: background-color var(--p-transition-duration, .24s) ease;
}
::slotted(a), ::slotted(button) {
  display: inline !important;
  position: static !important;
  text-decoration: underline !important;
  cursor: pointer !important;
  font: inherit !important;
  outline: 0 !important;
  color: inherit !important;
}
::slotted(a)::before, ::slotted(button)::before {
  content: "" !important;
  position: absolute !important;
  top: -4px !important;
  left: -4px !important;
  right: -4px !important;
  bottom: -4px !important;
  border: 2px solid transparent !important;
  border-radius: 8px !important;
}
::slotted(a:focus)::before, ::slotted(button:focus)::before {
  border-color: #0A0AFF !important;
}
::slotted(a:focus:not(:focus-visible))::before, ::slotted(button:focus:not(:focus-visible))::before {
  border-color: transparent !important;
}
::slotted(button) {
  margin: 0 !important;
  padding: 0 !important;
  background: 0 !important;
  border: 0 !important;
  text-align: left !important;
}
::slotted(br) {
  display: none !important;
}
::slotted(strong), ::slotted(b) {
  font-weight: 700 !important;
}
::slotted(em), ::slotted(i) {
  font-style: [object Object];
}
@media(hover:hover) {
  span:hover {
    cursor: pointer;
    background: #d6def0;
  }
}

.icon {
  margin: 0 0.125rem 0 -0.125rem;
}"
`;

exports[`getComponentCss() should return correct css for color: notification-success, isFocusable: true and theme: dark 1`] = `
":host {
  display: inline-flex;
  vertical-align: top;
}
span {
  display: flex;
  align-items: center;
  position: relative;
  padding: 5px 9px;
  border-radius: 4px;
  background: #003320;
  color: #FBFCFF;
  font: normal normal 400 .875rem/calc(6px + 2.125ex) 'Porsche Next','Arial Narrow',Arial,'Heiti SC',SimHei,sans-serif;
  overflow-wrap: break-word;
  hyphens: auto;
  white-space: nowrap;
  transition: background-color var(--p-transition-duration, .24s) ease;
}
::slotted(a), ::slotted(button) {
  display: inline !important;
  position: static !important;
  text-decoration: underline !important;
  cursor: pointer !important;
  font: inherit !important;
  outline: 0 !important;
  color: inherit !important;
}
::slotted(a)::before, ::slotted(button)::before {
  content: "" !important;
  position: absolute !important;
  top: -4px !important;
  left: -4px !important;
  right: -4px !important;
  bottom: -4px !important;
  border: 2px solid transparent !important;
  border-radius: 8px !important;
}
::slotted(a:focus)::before, ::slotted(button:focus)::before {
  border-color: #0A0AFF !important;
}
::slotted(a:focus:not(:focus-visible))::before, ::slotted(button:focus:not(:focus-visible))::before {
  border-color: transparent !important;
}
::slotted(button) {
  margin: 0 !important;
  padding: 0 !important;
  background: 0 !important;
  border: 0 !important;
  text-align: left !important;
}
::slotted(br) {
  display: none !important;
}
::slotted(strong), ::slotted(b) {
  font-weight: 700 !important;
}
::slotted(em), ::slotted(i) {
  font-style: [object Object];
}
@media(hover:hover) {
  span:hover {
    cursor: pointer;
    background: #0f432f;
  }
}

.icon {
  margin: 0 0.125rem 0 -0.125rem;
}"
`;

exports[`getComponentCss() should return correct css for color: notification-success, isFocusable: true and theme: light 1`] = `
":host {
  display: inline-flex;
  vertical-align: top;
}
span {
  display: flex;
  align-items: center;
  position: relative;
  padding: 5px 9px;
  border-radius: 4px;
  background: #EBFAF0;
  color: #010205;
  font: normal normal 400 .875rem/calc(6px + 2.125ex) 'Porsche Next','Arial Narrow',Arial,'Heiti SC',SimHei,sans-serif;
  overflow-wrap: break-word;
  hyphens: auto;
  white-space: nowrap;
  transition: background-color var(--p-transition-duration, .24s) ease;
}
::slotted(a), ::slotted(button) {
  display: inline !important;
  position: static !important;
  text-decoration: underline !important;
  cursor: pointer !important;
  font: inherit !important;
  outline: 0 !important;
  color: inherit !important;
}
::slotted(a)::before, ::slotted(button)::before {
  content: "" !important;
  position: absolute !important;
  top: -4px !important;
  left: -4px !important;
  right: -4px !important;
  bottom: -4px !important;
  border: 2px solid transparent !important;
  border-radius: 8px !important;
}
::slotted(a:focus)::before, ::slotted(button:focus)::before {
  border-color: #0A0AFF !important;
}
::slotted(a:focus:not(:focus-visible))::before, ::slotted(button:focus:not(:focus-visible))::before {
  border-color: transparent !important;
}
::slotted(button) {
  margin: 0 !important;
  padding: 0 !important;
  background: 0 !important;
  border: 0 !important;
  text-align: left !important;
}
::slotted(br) {
  display: none !important;
}
::slotted(strong), ::slotted(b) {
  font-weight: 700 !important;
}
::slotted(em), ::slotted(i) {
  font-style: [object Object];
}
@media(hover:hover) {
  span:hover {
    cursor: pointer;
    background: #ddeae1;
  }
}

.icon {
  margin: 0 0.125rem 0 -0.125rem;
}"
`;

exports[`getComponentCss() should return correct css for color: notification-warning, isFocusable: true and theme: dark 1`] = `
":host {
  display: inline-flex;
  vertical-align: top;
}
span {
  display: flex;
  align-items: center;
  position: relative;
  padding: 5px 9px;
  border-radius: 4px;
  background: #2B2208;
  color: #FBFCFF;
  font: normal normal 400 .875rem/calc(6px + 2.125ex) 'Porsche Next','Arial Narrow',Arial,'Heiti SC',SimHei,sans-serif;
  overflow-wrap: break-word;
  hyphens: auto;
  white-space: nowrap;
  transition: background-color var(--p-transition-duration, .24s) ease;
}
::slotted(a), ::slotted(button) {
  display: inline !important;
  position: static !important;
  text-decoration: underline !important;
  cursor: pointer !important;
  font: inherit !important;
  outline: 0 !important;
  color: inherit !important;
}
::slotted(a)::before, ::slotted(button)::before {
  content: "" !important;
  position: absolute !important;
  top: -4px !important;
  left: -4px !important;
  right: -4px !important;
  bottom: -4px !important;
  border: 2px solid transparent !important;
  border-radius: 8px !important;
}
::slotted(a:focus)::before, ::slotted(button:focus)::before {
  border-color: #0A0AFF !important;
}
::slotted(a:focus:not(:focus-visible))::before, ::slotted(button:focus:not(:focus-visible))::before {
  border-color: transparent !important;
}
::slotted(button) {
  margin: 0 !important;
  padding: 0 !important;
  background: 0 !important;
  border: 0 !important;
  text-align: left !important;
}
::slotted(br) {
  display: none !important;
}
::slotted(strong), ::slotted(b) {
  font-weight: 700 !important;
}
::slotted(em), ::slotted(i) {
  font-style: [object Object];
}
@media(hover:hover) {
  span:hover {
    cursor: pointer;
    background: #362f1c;
  }
}

.icon {
  margin: 0 0.125rem 0 -0.125rem;
}"
`;

exports[`getComponentCss() should return correct css for color: notification-warning, isFocusable: true and theme: light 1`] = `
":host {
  display: inline-flex;
  vertical-align: top;
}
span {
  display: flex;
  align-items: center;
  position: relative;
  padding: 5px 9px;
  border-radius: 4px;
  background: #FFF9E6;
  color: #010205;
  font: normal normal 400 .875rem/calc(6px + 2.125ex) 'Porsche Next','Arial Narrow',Arial,'Heiti SC',SimHei,sans-serif;
  overflow-wrap: break-word;
  hyphens: auto;
  white-space: nowrap;
  transition: background-color var(--p-transition-duration, .24s) ease;
}
::slotted(a), ::slotted(button) {
  display: inline !important;
  position: static !important;
  text-decoration: underline !important;
  cursor: pointer !important;
  font: inherit !important;
  outline: 0 !important;
  color: inherit !important;
}
::slotted(a)::before, ::slotted(button)::before {
  content: "" !important;
  position: absolute !important;
  top: -4px !important;
  left: -4px !important;
  right: -4px !important;
  bottom: -4px !important;
  border: 2px solid transparent !important;
  border-radius: 8px !important;
}
::slotted(a:focus)::before, ::slotted(button:focus)::before {
  border-color: #0A0AFF !important;
}
::slotted(a:focus:not(:focus-visible))::before, ::slotted(button:focus:not(:focus-visible))::before {
  border-color: transparent !important;
}
::slotted(button) {
  margin: 0 !important;
  padding: 0 !important;
  background: 0 !important;
  border: 0 !important;
  text-align: left !important;
}
::slotted(br) {
  display: none !important;
}
::slotted(strong), ::slotted(b) {
  font-weight: 700 !important;
}
::slotted(em), ::slotted(i) {
  font-style: [object Object];
}
@media(hover:hover) {
  span:hover {
    cursor: pointer;
    background: #f5ecd2;
  }
}

.icon {
  margin: 0 0.125rem 0 -0.125rem;
}"
`;

exports[`getThemedBackgroundColor() should return correct backgroundColor for color: background-default, theme: dark 1`] = `"#0E0E12"`;

exports[`getThemedBackgroundColor() should return correct backgroundColor for color: background-default, theme: light 1`] = `"#FFF"`;

exports[`getThemedBackgroundColor() should return correct backgroundColor for color: background-surface, theme: dark 1`] = `"#212225"`;

exports[`getThemedBackgroundColor() should return correct backgroundColor for color: background-surface, theme: light 1`] = `"#EEEFF2"`;

exports[`getThemedBackgroundColor() should return correct backgroundColor for color: neutral-contrast-high, theme: dark 1`] = `"#FBFCFF"`;

exports[`getThemedBackgroundColor() should return correct backgroundColor for color: neutral-contrast-high, theme: light 1`] = `"#010205"`;

exports[`getThemedBackgroundColor() should return correct backgroundColor for color: notification-error, theme: dark 1`] = `"#290A0A"`;

exports[`getThemedBackgroundColor() should return correct backgroundColor for color: notification-error, theme: light 1`] = `"#FCE8E9"`;

exports[`getThemedBackgroundColor() should return correct backgroundColor for color: notification-information, theme: dark 1`] = `"#001A33"`;

exports[`getThemedBackgroundColor() should return correct backgroundColor for color: notification-information, theme: light 1`] = `"#E8EEFD"`;

exports[`getThemedBackgroundColor() should return correct backgroundColor for color: notification-success, theme: dark 1`] = `"#003320"`;

exports[`getThemedBackgroundColor() should return correct backgroundColor for color: notification-success, theme: light 1`] = `"#EBFAF0"`;

exports[`getThemedBackgroundColor() should return correct backgroundColor for color: notification-warning, theme: dark 1`] = `"#2B2208"`;

exports[`getThemedBackgroundColor() should return correct backgroundColor for color: notification-warning, theme: light 1`] = `"#FFF9E6"`;
