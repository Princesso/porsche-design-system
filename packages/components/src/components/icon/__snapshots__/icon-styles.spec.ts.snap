// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`getComponentCss() should return correct css for color: brand, size: small and theme: light 1`] = `
":host {
  display: inline-flex;
  vertical-align: top;
}
img {
  filter: none;
}
svg {
  fill: currentColor;
}
@media (forced-colors: active) {
  svg {
    fill: canvasText;
  }
}

.root {
  display: flex;
  flex-shrink: 0;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  width: 1.5rem;
  height: 1.5rem;
  color: #d5001c;
}"
`;

exports[`getComponentCss() should return correct css for color: default, size: inherit and theme: light 1`] = `
":host {
  display: inline-flex;
  vertical-align: top;
}
img {
  filter: none;
}
svg {
  fill: currentColor;
}
@media (forced-colors: active) {
  svg {
    fill: canvasText;
  }
}

.root {
  display: flex;
  flex-shrink: 0;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  width: inherit;
  height: inherit;
  color: #000;
}"
`;

exports[`getComponentCss() should return correct css for color: default, size: large and theme: light 1`] = `
":host {
  display: inline-flex;
  vertical-align: top;
}
img {
  filter: none;
}
svg {
  fill: currentColor;
}
@media (forced-colors: active) {
  svg {
    fill: canvasText;
  }
}

.root {
  display: flex;
  flex-shrink: 0;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  width: 3rem;
  height: 3rem;
  color: #000;
}"
`;

exports[`getComponentCss() should return correct css for color: default, size: small and theme: dark 1`] = `
":host {
  display: inline-flex;
  vertical-align: top;
}
img {
  filter: invert(100%);
}
svg {
  fill: currentColor;
}
@media (forced-colors: active) {
  svg {
    fill: canvasText;
  }
}

.root {
  display: flex;
  flex-shrink: 0;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  width: 1.5rem;
  height: 1.5rem;
  color: #fff;
}"
`;

exports[`getComponentCss() should return correct css for color: default, size: small and theme: light 1`] = `
":host {
  display: inline-flex;
  vertical-align: top;
}
img {
  filter: none;
}
svg {
  fill: currentColor;
}
@media (forced-colors: active) {
  svg {
    fill: canvasText;
  }
}

.root {
  display: flex;
  flex-shrink: 0;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  width: 1.5rem;
  height: 1.5rem;
  color: #000;
}"
`;

exports[`getComponentCss() should return correct css for color: inherit, size: small and theme: light 1`] = `
":host {
  display: inline-flex;
  vertical-align: top;
}
img {
  filter: none;
}
svg {
  fill: currentColor;
}
@media (forced-colors: active) {
  svg {
    fill: canvasText;
  }
}

.root {
  display: flex;
  flex-shrink: 0;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  width: 1.5rem;
  height: 1.5rem;
  color: currentColor;
}"
`;
